pipeline {
    agent any
    environment {
        SONARQUBE_SERVER = 'SonarQubeServer' // Jenkins global config
        DOCKER_IMAGE = "devops-practice-app:${env.BUILD_NUMBER}"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                sh 'pip install -r app/requirements.txt'
            }
        }
        stage('Test') {
            steps {
                sh 'pytest app/'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQubeServer') {
                    sh 'sonar-scanner -Dsonar.projectKey=devops-practice-app -Dsonar.sources=app/'
                }
            }
        }
        stage('Docker Build') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE -f docker/Dockerfile .'
            }
        }
        stage('Archive Artifact') {
            steps {
                archiveArtifacts artifacts: 'docker/Dockerfile', fingerprint: true
            }
        }
    }
    post {
        always {
            junit 'app/test-results.xml'
        }
    }
}
